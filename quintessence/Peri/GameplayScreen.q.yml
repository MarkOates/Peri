parent_classes:


  - class: AllegroFlare::Screen
    scope: public
    init_with: "{}"


properties:


  - name: framework
    type: AllegroFlare::Framework*
    init_with: nullptr
    constructor_arg: true
  - name: board
    type: Peri::Board
    init_with: '{}'
  - name: current_piece
    type: Peri::Piece*
    init_with: nullptr


functions:


  - name: primary_timer_func
    virtual: true
    override: true
    body: |
      Peri::BoardRenderer board_renderer(&board);
      board_renderer.render();
      return;
    body_dependency_symbols:
      - Peri::BoardRenderer


  - name: key_down_func
    override: true
    parameters:
      - name: ev
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    body: |
      switch(ev->keyboard.keycode)
      {
      case ALLEGRO_KEY_RIGHT:
         std::cout << "RIGHT" << std::endl;
         //framework->shutdown_program = true;
         break;
      case ALLEGRO_KEY_LEFT:
         //framework->shutdown_program = true;
         break;
      case ALLEGRO_KEY_SPACE:
         //framework->shutdown_program = true;
         break;
      case ALLEGRO_KEY_ENTER:
         //framework->shutdown_program = true;
         break;
      }
      return;
    body_dependency_symbols: []


  - name: generate_piece
    body: |
      if (current_piece) delete current_piece;
      current_piece = new Peri::Piece;


dependencies:


  - symbol: AllegroFlare::Screen
    headers: [ AllegroFlare/Screen.hpp ]
  - symbol: AllegroFlare::Framework*
    headers: [ AllegroFlare/Framework.hpp ]
  - symbol: ALLEGRO_EVENT*
    headers: [ allegro5/allegro.h ]
  - symbol: Peri::Board
    headers: [ Peri/Board.hpp ]
  - symbol: Peri::BoardRenderer
    headers: [ Peri/BoardRenderer.hpp ]
  - symbol: Peri::PieceRenderer
    headers: [ Peri/PieceRenderer.hpp ]
  - symbol: Peri::Piece*
    headers: [ Peri/Piece.hpp ]

